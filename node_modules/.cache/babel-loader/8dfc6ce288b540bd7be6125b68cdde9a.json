{"ast":null,"code":"var _jsxFileName = \"/home/kaalan/Bootcamp/bootcamp/week10/react-proj/src/Components/Users/Users.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useContext } from \"react\";\nimport GithubContext from \"../../Context/GithubContext\";\nimport Search from \"./Search\";\nimport UserItem from \"./UserItem\";\nimport Spinner from \"../Layouts/Spinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Users = props => {\n  _s();\n\n  const context = useContext(GithubContext);\n  useEffect(() => {\n    props.getAllUsers(); //eslint-disable-next-line\n  }, []);\n\n  const diplayAlert = (msg, type) => {\n    props.diplayAlert(msg, type);\n  };\n\n  const userStyle = {\n    display: \"grid\",\n    gridTemplateColumns: \"repeat(3,1fr)\",\n    gridGap: \"1rem\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Search, {\n      onNullSearch: diplayAlert,\n      searchUsers: props.searchUsers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), props.loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: userStyle,\n      children: props.users.map(element => /*#__PURE__*/_jsxDEV(UserItem, {\n        login: element.login,\n        avatar_url: element.avatar_url\n      }, element.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}; // class Users extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       usersConst: [],\n//     };\n//   }\n//   componentDidMount() {\n//     this.props.getAllUsers();\n//   }\n//   diplayAlert = (msg, type) => {\n//     this.setState({ alert: { msg, type } });\n//     setTimeout(() => {\n//       this.setState({ alert: null });\n//     }, 5000);\n//   };\n//   removeNonMatch = (keyword) => {\n//     let users = this.state.usersConst;\n//     // let regex = `/${keyword}/g`;\n//     const regex = new RegExp(`(${keyword})`);\n//     let newUsers = users.filter(({ login }) => {\n//       return regex.test(login);\n//     });\n//     this.setState({ users: newUsers });\n//   };\n//   render() {\n//     const userStyle = {\n//       display: \"grid\",\n//       gridTemplateColumns: \"repeat(3,1fr)\",\n//       gridGap: \"1rem\",\n//     };\n//     return (\n//       <div>\n//         <Search\n//           onNullSearch={this.diplayAlert}\n//           onSearchFilter={this.removeNonMatch}\n//           searchUsers={this.props.searchUsers}\n//         />\n//         {this.props.loading ? (\n//           <Spinner />\n//         ) : (\n//           <div style={userStyle}>\n//             {this.props.users.map((element) => (\n//               <UserItem\n//                 login={element.login}\n//                 avatar_url={element.avatar_url}\n//                 key={element.id}\n//               />\n//             ))}\n//           </div>\n//         )}\n//       </div>\n//     );\n//   }\n// }\n\n\n_s(Users, \"wqnYpdjMkT3eDhbBjwDmfBO/TFg=\");\n\n_c = Users;\nexport default Users;\n\nvar _c;\n\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"sources":["/home/kaalan/Bootcamp/bootcamp/week10/react-proj/src/Components/Users/Users.js"],"names":["React","useEffect","useContext","GithubContext","Search","UserItem","Spinner","Users","props","context","getAllUsers","diplayAlert","msg","type","userStyle","display","gridTemplateColumns","gridGap","searchUsers","loading","users","map","element","login","avatar_url","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,QAA6C,OAA7C;AAEA,OAAOC,aAAP,MAA0B,6BAA1B;AAEA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,oBAApB;;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA;;AACvB,QAAMC,OAAO,GAAGP,UAAU,CAACC,aAAD,CAA1B;AACAF,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,KAAK,CAACE,WAAN,GADc,CAEd;AACD,GAHQ,EAGN,EAHM,CAAT;;AAKA,QAAMC,WAAW,GAAG,CAACC,GAAD,EAAMC,IAAN,KAAe;AACjCL,IAAAA,KAAK,CAACG,WAAN,CAAkBC,GAAlB,EAAuBC,IAAvB;AACD,GAFD;;AAIA,QAAMC,SAAS,GAAG;AAChBC,IAAAA,OAAO,EAAE,MADO;AAEhBC,IAAAA,mBAAmB,EAAE,eAFL;AAGhBC,IAAAA,OAAO,EAAE;AAHO,GAAlB;AAMA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,YAAY,EAAEN,WAAtB;AAAmC,MAAA,WAAW,EAAEH,KAAK,CAACU;AAAtD;AAAA;AAAA;AAAA;AAAA,YADF,EAEGV,KAAK,CAACW,OAAN,gBACC,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADD,gBAGC;AAAK,MAAA,KAAK,EAAEL,SAAZ;AAAA,gBACGN,KAAK,CAACY,KAAN,CAAYC,GAAZ,CAAiBC,OAAD,iBACf,QAAC,QAAD;AACE,QAAA,KAAK,EAAEA,OAAO,CAACC,KADjB;AAEE,QAAA,UAAU,EAAED,OAAO,CAACE;AAFtB,SAGOF,OAAO,CAACG,EAHf;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CAnCD,C,CAqCA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;GA/FMlB,K;;KAAAA,K;AAiGN,eAAeA,KAAf","sourcesContent":["import React, { useEffect, useContext } from \"react\";\n\nimport GithubContext from \"../../Context/GithubContext\"\n\nimport Search from \"./Search\";\nimport UserItem from \"./UserItem\";\nimport Spinner from \"../Layouts/Spinner\";\n\nconst Users = (props) => {\n  const context = useContext(GithubContext)\n  useEffect(() => {\n    props.getAllUsers();\n    //eslint-disable-next-line\n  }, []);\n\n  const diplayAlert = (msg, type) => {\n    props.diplayAlert(msg, type);\n  };\n\n  const userStyle = {\n    display: \"grid\",\n    gridTemplateColumns: \"repeat(3,1fr)\",\n    gridGap: \"1rem\",\n  };\n\n  return (\n    <div>\n      <Search onNullSearch={diplayAlert} searchUsers={props.searchUsers} />\n      {props.loading ? (\n        <Spinner />\n      ) : (\n        <div style={userStyle}>\n          {props.users.map((element) => (\n            <UserItem\n              login={element.login}\n              avatar_url={element.avatar_url}\n              key={element.id}\n            />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\n// class Users extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       usersConst: [],\n//     };\n//   }\n\n//   componentDidMount() {\n//     this.props.getAllUsers();\n//   }\n\n//   diplayAlert = (msg, type) => {\n//     this.setState({ alert: { msg, type } });\n//     setTimeout(() => {\n//       this.setState({ alert: null });\n//     }, 5000);\n//   };\n//   removeNonMatch = (keyword) => {\n//     let users = this.state.usersConst;\n//     // let regex = `/${keyword}/g`;\n//     const regex = new RegExp(`(${keyword})`);\n\n//     let newUsers = users.filter(({ login }) => {\n//       return regex.test(login);\n//     });\n//     this.setState({ users: newUsers });\n//   };\n\n//   render() {\n//     const userStyle = {\n//       display: \"grid\",\n//       gridTemplateColumns: \"repeat(3,1fr)\",\n//       gridGap: \"1rem\",\n//     };\n//     return (\n//       <div>\n//         <Search\n//           onNullSearch={this.diplayAlert}\n//           onSearchFilter={this.removeNonMatch}\n//           searchUsers={this.props.searchUsers}\n//         />\n//         {this.props.loading ? (\n//           <Spinner />\n//         ) : (\n//           <div style={userStyle}>\n//             {this.props.users.map((element) => (\n//               <UserItem\n//                 login={element.login}\n//                 avatar_url={element.avatar_url}\n//                 key={element.id}\n//               />\n//             ))}\n//           </div>\n//         )}\n//       </div>\n//     );\n//   }\n// }\n\nexport default Users;\n"]},"metadata":{},"sourceType":"module"}