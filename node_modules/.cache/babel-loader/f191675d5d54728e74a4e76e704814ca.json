{"ast":null,"code":"var _jsxFileName = \"/home/kaalan/Bootcamp/bootcamp/week10/react-proj/src/Components/Users/Users.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Search from \"./Search\";\nimport UserItem from \"./UserItem\";\nimport Spinner from \"../Layouts/Spinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Users extends Component {\n  constructor(props) {\n    super(props);\n\n    this.searchUsers = async text => {\n      try {\n        let {\n          data\n        } = await axios.get(`https://api.github.com/search/users?q=${text}`);\n        this.setState({\n          users: data.items\n        });\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    this.state = {\n      users: [],\n      loading: false\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      this.setState({\n        loading: true\n      });\n      let {\n        data\n      } = await axios.get(\"https://api.github.com/users\");\n      this.setState({\n        users: data,\n        loading: false\n      });\n    } catch (error) {\n      this.setState({\n        loading: false\n      });\n      console.error(\"Error on api call\");\n    }\n  }\n\n  render() {\n    const userStyle = {\n      display: \"grid\",\n      gridTemplateColumns: \"repeat(3,1fr)\",\n      gridGap: \"1rem\"\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Search, {\n        searchUsers: this.searchUsers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), this.state.loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        style: userStyle,\n        children: this.state.users.map(element => /*#__PURE__*/_jsxDEV(UserItem, {\n          login: element.login,\n          avatar_url: element.avatar_url\n        }, element.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Users;","map":{"version":3,"sources":["/home/kaalan/Bootcamp/bootcamp/week10/react-proj/src/Components/Users/Users.js"],"names":["React","Component","axios","Search","UserItem","Spinner","Users","constructor","props","searchUsers","text","data","get","setState","users","items","error","console","state","loading","componentDidMount","render","userStyle","display","gridTemplateColumns","gridGap","map","element","login","avatar_url","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,oBAApB;;;AAEA,MAAMC,KAAN,SAAoBL,SAApB,CAA8B;AAC5BM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAmBnBC,WAnBmB,GAmBL,MAAOC,IAAP,IAAgB;AAC5B,UAAI;AACF,YAAI;AAAEC,UAAAA;AAAF,YAAW,MAAMT,KAAK,CAACU,GAAN,CAClB,yCAAwCF,IAAK,EAD3B,CAArB;AAGA,aAAKG,QAAL,CAAc;AAAEC,UAAAA,KAAK,EAAEH,IAAI,CAACI;AAAd,SAAd;AACD,OALD,CAKE,OAAOC,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD;AACF,KA5BkB;;AAEjB,SAAKE,KAAL,GAAa;AACXJ,MAAAA,KAAK,EAAE,EADI;AAEXK,MAAAA,OAAO,EAAE;AAFE,KAAb;AAID;;AAEsB,QAAjBC,iBAAiB,GAAG;AACxB,QAAI;AACF,WAAKP,QAAL,CAAc;AAAEM,QAAAA,OAAO,EAAE;AAAX,OAAd;AACA,UAAI;AAAER,QAAAA;AAAF,UAAW,MAAMT,KAAK,CAACU,GAAN,CAAU,8BAAV,CAArB;AACA,WAAKC,QAAL,CAAc;AAAEC,QAAAA,KAAK,EAAEH,IAAT;AAAeQ,QAAAA,OAAO,EAAE;AAAxB,OAAd;AACD,KAJD,CAIE,OAAOH,KAAP,EAAc;AACd,WAAKH,QAAL,CAAc;AAAEM,QAAAA,OAAO,EAAE;AAAX,OAAd;AACAF,MAAAA,OAAO,CAACD,KAAR,CAAc,mBAAd;AACD;AACF;;AAaDK,EAAAA,MAAM,GAAG;AACP,UAAMC,SAAS,GAAG;AAChBC,MAAAA,OAAO,EAAE,MADO;AAEhBC,MAAAA,mBAAmB,EAAE,eAFL;AAGhBC,MAAAA,OAAO,EAAE;AAHO,KAAlB;AAKA,wBACE;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,WAAW,EAAE,KAAKhB;AAA1B;AAAA;AAAA;AAAA;AAAA,cADF,EAEG,KAAKS,KAAL,CAAWC,OAAX,gBACC,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cADD,gBAGC;AAAK,QAAA,KAAK,EAAEG,SAAZ;AAAA,kBACG,KAAKJ,KAAL,CAAWJ,KAAX,CAAiBY,GAAjB,CAAsBC,OAAD,iBACpB,QAAC,QAAD;AACE,UAAA,KAAK,EAAEA,OAAO,CAACC,KADjB;AAEE,UAAA,UAAU,EAAED,OAAO,CAACE;AAFtB,WAGOF,OAAO,CAACG,EAHf;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAkBD;;AAvD2B;;AA0D9B,eAAexB,KAAf","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nimport Search from \"./Search\";\nimport UserItem from \"./UserItem\";\nimport Spinner from \"../Layouts/Spinner\";\n\nclass Users extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      users: [],\n      loading: false,\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      this.setState({ loading: true });\n      let { data } = await axios.get(\"https://api.github.com/users\");\n      this.setState({ users: data, loading: false });\n    } catch (error) {\n      this.setState({ loading: false });\n      console.error(\"Error on api call\");\n    }\n  }\n\n  searchUsers = async (text) => {\n    try {\n      let { data } = await axios.get(\n        `https://api.github.com/search/users?q=${text}`\n      );\n      this.setState({ users: data.items });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  render() {\n    const userStyle = {\n      display: \"grid\",\n      gridTemplateColumns: \"repeat(3,1fr)\",\n      gridGap: \"1rem\",\n    };\n    return (\n      <div>\n        <Search searchUsers={this.searchUsers} />\n        {this.state.loading ? (\n          <Spinner />\n        ) : (\n          <div style={userStyle}>\n            {this.state.users.map((element) => (\n              <UserItem\n                login={element.login}\n                avatar_url={element.avatar_url}\n                key={element.id}\n              />\n            ))}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Users;\n"]},"metadata":{},"sourceType":"module"}